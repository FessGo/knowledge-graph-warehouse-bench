CREATE CONCEPT TYPE (Concept.AccountType {
	parent std.Hypernym
});
CREATE CONCEPT TYPE (Concept.AccountLevel {
	parent std.Hypernym
});
CREATE CONCEPT TYPE (Concept.MediumType {
	parent std.Hypernym
});
CREATE CONCEPT TYPE (Concept.BusinessType {
	parent std.Hypernym
});
CREATE CONCEPT TYPE (Concept.RiskLevel {
	parent std.Hypernym
});
CREATE CONCEPT TYPE (Concept.Country {
	parent std.Hypernym
});
CREATE CONCEPT TYPE (Concept.City {
	parent std.Hypernym
});
CREATE NOMALIZED TYPE (STD.Email {
	value String REGEX '[a-zA-Z0-9_\-\.]+@[a-zA-Z0-9_\-\.]+\.[a-zA-Z]{2,3}'
});
CREATE NOMALIZED TYPE (std.PhoneNumber {
	value String REGEX '^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\d{8}$'
});
CREATE NOMALIZED TYPE (std.Url {
	value String REGEX '(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&:/~\+#]*[\w\-\@?^=%&/~\+#])?'
});

CREATE ENTITY TYPE (Account {
	id ID,
	createTime Timestamp,
	isBlocked Boolean,
	type Concept.AccountType,
	nickname String,
	phoneNumber STD.PhoneNumber,
	email STD.Email,
	freqLoginType Concept.MediumType,
	lastLoginTime Long,
	accountLevel Concept.AccountLevel
});
CREATE ENTITY TYPE (Company {
	id ID,
	createTime Timestamp,
	name String,
	isBlocked Boolean,
	country Concept.Country,
	city Concept.City,
	business Concept.BusinessType,
	description String,
	url STD.Url
});
CREATE ENTITY TYPE (Person {
	id ID,
	createTime Timestamp,
	name String,
	isBlocked Boolean,
	gender String,
	birthday String,
	country Concept.Country,
	city Concept.City
});
CREATE ENTITY TYPE (Loan {
	id ID,
	loanAmount double,
	balance double,
	usage String,
	interestRate double
});
CREATE ENTITY TYPE (Medium {
	id ID,
	createTime Timestamp,
	type Concept.MediumType,
	isBlocked Boolean,
	lastLoginTime Long,
	riskLevel Concept.RiskLevel
});

CREATE RELATION TYPE (Account)-[TRANSFER {
	createTime Timestamp, 
	amount double,
	ordernumber String,
	comment String,
	payType String,
	goodsType String
}]->(Account);
CREATE RELATION TYPE (Medium)-[SIGNIN {
	createTime Timestamp, 
	location String
}]->(Account);
CREATE RELATION TYPE (Person)-[PERSONOWNACCOUNT {
	createTime Timestamp
}]->(Account);
CREATE RELATION TYPE (Company)-[COMPANYOWMACCOUNT {
	createTime Timestamp
}]->(Account);
CREATE RELATION TYPE (Account)-[WITHDRAW {
	createTime Timestamp,
	amount double
}]->(Account);
CREATE RELATION TYPE (Person)-[PERSONAPPLYLOAN {
	createTime Timestamp, 
	organization String
}]->(Loan);
CREATE RELATION TYPE (Company)-[COMPANYAPPLYLOAD {
	createTime Timestamp, 
	organization String
}]->(Loan);
CREATE RELATION TYPE (Loan)-[DEPOSIT {
	createTime Timestamp, 
	amount double
}]->(Account);
CREATE RELATION TYPE (Account)-[REPAY {
	createTime Timestamp, 
	amount double
}]->(Loan);
CREATE RELATION TYPE (Person)-[PERSONINVEST {
	createTime Timestamp, 
	ratio double
}]->(Company);
CREATE RELATION TYPE (Company)-[COMPANYINVEST {
	createTime Timestamp, 
	ratio double
}]->(Company);
CREATE RELATION TYPE (Person)-[PERSONGUARANTEE {
	createTime Timestamp, 
	relation String
}]->(Person);
CREATE RELATION TYPE (Company)-[COMPANYGUARANTEE {
	createTime Timestamp, 
	relation String
}]->(Company);
